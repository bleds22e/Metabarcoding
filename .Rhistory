source('C:/Users/ellen.bledsoe/Dropbox/Portal/PORTAL_primary_data/Rodent/Documents/compare_raw_data.r')
source('C:/Users/ellen.bledsoe/Dropbox/Portal/PORTAL_primary_data/Rodent/Documents/general_error_check.r')
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/analyze.txt", header = TRUE)
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/analyze.txt", header = TRUE, sep = " ")
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/analyze.txt")
core_sat <- read.csv("C:/Users/ellen.bledsoe/Downloads/analyze.txt")
View(core_sat)
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/analyze.txt", sep = "tab")
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/analyze.txt", sep = "")
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/analyze.txt", sep = " ")
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/analyze.txt", sep = ",")
View(core_sat)
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/analyze.txt", sep = ",", header = TRUE)
View(core_sat)
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/analyze.txt", sep = "\t", header = TRUE)
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/savedrecs.txt", sep = "\t", header = TRUE)
View(core_sat)
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/savedrecs.txt", sep = "\", header = TRUE)
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/savedrecs.txt", sep = "", header = TRUE)
View(core_sat)
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/savedrecs.txt", sep = ",", header = TRUE)
View(core_sat)
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/savedrecs.txt", sep = " ", header = TRUE)
core_sat <- read.table("C:/Users/ellen.bledsoe/Downloads/analyze.txt", sep = "\t", col.names = c("Authors", "records", "% of 739"), fill = FALSE, strip.white = TRUE)
library(dplyr)
setwd("C:/Users/ellen.bledsoe/Desktop/Git/Metagenomics")
noblast = read.csv("./Plants/ITS_no_blast.csv", stringsAsFactors = FALSE)
OTUs = noblast %>% select(OTU.ID)
allITSseqs = read.csv("./Plants/ITS_from_fna.csv", stringsAsFactors = FALSE)
noblast_OTUs = allITSseqs %>% filter(OTU_its %in% OTUs$OTU.ID)
OTU_refset = noblast_OTUs %>% filter(OTU_its %in% c("OTU1","OTU101", "OTU3"))
completed_blasts = read.csv("NoBlast_blastoutput.csv", stringsAsFactors = FALSE)
completed_OTUs = unique(completed_blasts$OTU.ID)
OTUs_forBLAST = OTU_refset %>% filter(!(OTU_its %in% completed_OTUs))
source("https://bioconductor.org/biocLite.R")
biocLite("annotate")
library(annotate)
file = c()
num_seq = nrow(OTUs_forBLAST)
for(i in 1:num_seq){
print(paste("Number of sequences remaining:",num_seq-(i-1),sep=" "))
header = as.character(paste(">",OTUs_forBLAST$OTU_its[i], sep=""))
data = as.character(paste(header,OTUs_forBLAST$sequence_its[i],sep="\n"))
output = blastSequences(x=data,timeout = 220,
hitListSize = 20, as='data.frame')
file = rbind(file,output)
print(paste(OTUs_forBLAST$OTU_its[i], "complete", sep = " "))
}
View(completed_blasts)
View(OTU_refset)
OTUs_forBLAST = noblast_OTUs %>% filter(!(OTU_its %in% completed_OTUs))
library(annotate)
file = c()
num_seq = nrow(OTUs_forBLAST)
for(i in 1:num_seq){
print(paste("Number of sequences remaining:",num_seq-(i-1),sep=" "))
header = as.character(paste(">",OTUs_forBLAST$OTU_its[i], sep=""))
data = as.character(paste(header,OTUs_forBLAST$sequence_its[i],sep="\n"))
output = blastSequences(x=data,timeout = 220,
hitListSize = 20, as='data.frame')
file = rbind(file,output)
print(paste(OTUs_forBLAST$OTU_its[i], "complete", sep = " "))
}
names(file)[3] = 'OTU.ID'
names(file)[4] = 'Query.length'
names(file)[25] = 'Hsp.length'
clean.file = dplyr::select(file, OTU.ID, Query.length, Hit_id, Hit_def,
Hit_len, Hsp_evalue,
Hsp_identity, Hsp.length)
clean.file = clean.file %>% mutate_each_(funs(as.integer), c("Query.length","Hit_len",
"Hsp_identity","Hsp.length"))
clean.file = clean.file %>% mutate_each_(funs(as.numeric), "Hsp_evalue")
clean.file = clean.file %>% mutate(identity_percent = 100* (Hsp_identity/Hsp.length),
Query.cover = 100* (Hsp.length/Query.length))
completed_blasts = rbind(completed_blasts,clean.file)
View(completed_blasts)
write.csv(completed_blasts, "NoBlast_blastoutput.csv", row.names=FALSE)
write.csv(completed_blasts, "./Plants/NoBlast_blastoutput.csv", row.names=FALSE)
completed_blasts = read.csv("NoBlast_blastoutput.csv", stringsAsFactors = FALSE)
completed_OTUs = unique(completed_blasts$OTU.ID)
OTUs_forBLAST = noblast_OTUs %>% filter(!(OTU_its %in% completed_OTUs))
file = c()
num_seq = nrow(OTUs_forBLAST)
for(i in 1:num_seq){
print(paste("Number of sequences remaining:",num_seq-(i-1),sep=" "))
header = as.character(paste(">",OTUs_forBLAST$OTU_its[i], sep=""))
data = as.character(paste(header,OTUs_forBLAST$sequence_its[i],sep="\n"))
output = blastSequences(x=data,timeout = 220,
hitListSize = 20, as='data.frame')
file = rbind(file,output)
print(paste(OTUs_forBLAST$OTU_its[i], "complete", sep = " "))
}
names(file)[3] = 'OTU.ID'
names(file)[4] = 'Query.length'
names(file)[25] = 'Hsp.length'
clean.file = dplyr::select(file, OTU.ID, Query.length, Hit_id, Hit_def,
Hit_len, Hsp_evalue,
Hsp_identity, Hsp.length)
clean.file = clean.file %>% mutate_each_(funs(as.integer), c("Query.length","Hit_len",
"Hsp_identity","Hsp.length"))
clean.file = clean.file %>% mutate_each_(funs(as.numeric), "Hsp_evalue")
clean.file = clean.file %>% mutate(identity_percent = 100* (Hsp_identity/Hsp.length),
Query.cover = 100* (Hsp.length/Query.length))
completed_blasts = rbind(completed_blasts,clean.file)
write.csv(completed_blasts, "./Plants/NoBlast_blastoutput.csv", row.names=FALSE)
library(dplyr)
setwd("/Users/bleds22e/Documents/Git/Metagenomics")
noblast = read.csv("./Plants/ITS_no_blast.csv", stringsAsFactors = FALSE)
OTUs = noblast %>% select(OTU.ID)
allITSseqs = read.csv("./Plants/ITS_from_fna.csv", stringsAsFactors = FALSE)
noblast_OTUs = allITSseqs %>% filter(OTU_its %in% OTUs$OTU.ID)
OTU_refset = noblast_OTUs %>% filter(OTU_its %in% c("OTU1","OTU101", "OTU3"))
completed_blasts = read.csv("./Plants/NoBlast_blastoutput.csv", stringsAsFactors = FALSE)
completed_OTUs = unique(completed_blasts$OTU.ID)
OTUs_forBLAST = noblast_OTUs %>% filter(!(OTU_its %in% completed_OTUs))
library(annotate)
file = c()
num_seq = nrow(OTUs_forBLAST)
for(i in 1:num_seq){
print(paste("Number of sequences remaining:",num_seq-(i-1),sep=" "))
header = as.character(paste(">",OTUs_forBLAST$OTU_its[i], sep=""))
data = as.character(paste(header,OTUs_forBLAST$sequence_its[i],sep="\n"))
output = blastSequences(x=data,timeout = 220,
hitListSize = 20, as='data.frame')
file = rbind(file,output)
print(paste(OTUs_forBLAST$OTU_its[i], "complete", sep = " "))
}
file = c()
num_seq = nrow(OTUs_forBLAST)
for(i in 1:num_seq){
print(paste("Number of sequences remaining:",num_seq-(i-1),sep=" "))
header = as.character(paste(">",OTUs_forBLAST$OTU_its[i], sep=""))
data = as.character(paste(header,OTUs_forBLAST$sequence_its[i],sep="\n"))
output = blastSequences(x=data,timeout = 220,
hitListSize = 20, as='data.frame')
file = rbind(file,output)
print(paste(OTUs_forBLAST$OTU_its[i], "complete", sep = " "))
}
library(dplyr)
blast <- read.csv("./Plants/ITS_blast.csv", header = TRUE, na.strings = "")
library(dplyr)
blast <- read.csv("./Plants/ITS_blast.csv", header = TRUE, na.strings = "")
no_blast <- read.csv("./Plants/ITS_no_blast.csv", header = TRUE, na.strings = "")
plants <- read.csv("./CollectionData/plant_voucher_collection.csv", header = TRUE)
blast <- blast[-c(463:464), -"Sum"]
blast <- blast[-c(463:464), -Sum]
blast <- blast[-c(463:464), -("Sum")]
blast <- select(blast, -Sum)
blast <- blast[-c(463:464),]
no_blast <- select(no_blast, -Sum)
taxa_its <- select(blast, OTU.ID, ConsensusLineage)
for(this_level in c('k','p','c','o','f','g','s')){
# separate taxa into columns
step_one=sapply(strsplit(as.character(taxa_its$ConsensusLineage), paste0(this_level,'__')), '[', 2)
step_two=sapply(strsplit(step_one, ';'), '[', 1)
taxa_its[,this_level]=step_two
}
head(taxa_its)
taxa_its <- select(taxa_its, OTU.ID, k:s) #%>% distinct(OTU.ID, .keep_all = TRUE) %>% arrange(OTU.ID)
taxa_its <- select(taxa_its, OTU.ID, k:s) %>% distinct(OTU.ID, .keep_all = TRUE) %>% arrange(OTU.ID)
head(taxa_its)
taxa_its <- select(blast, OTU.ID, ConsensusLineage)
for(this_level in c('k','p','c','o','f','g','s')){
# separate taxa into columns
step_one=sapply(strsplit(as.character(taxa_its$ConsensusLineage), paste0(this_level,'__')), '[', 2)
step_two=sapply(strsplit(step_one, ';'), '[', 1)
taxa_its[,this_level]=step_two
}
taxa_its <- select(taxa_its, OTU.ID, k:s) %>% distinct(OTU.ID, .keep_all = TRUE)
head(taxa_its)
taxa_its <- select(taxa_its, OTU.ID, k:s) %>%
distinct(OTU.ID, .keep_all = TRUE) %>%
rename(taxa_its, Family = f, Genus = g, Species = s)
taxa_its <- select(taxa_its, OTU.ID, k:s) %>%
distinct(OTU.ID, .keep_all = TRUE) %>%
rename(Family = f, Genus = g, SciName = s)
write.csv(taxa_its, "SequencedData/Plants/ITS_BLAST_taxa_link_file.csv", row.names = FALSE)
blast <- select(blast, -ConsensusLineage)
all_ITS <- bind_rows(blast, no_blast, .id = "DF")
all_ITS <- tidyr::gather(all_ITS, "Sample", "Reads", S008809.Wisely:S009099.Wisely) %>%
filter(Reads != 0)
all_ITS <- tidyr::separate(all_ITS, Sample, into = c("Sample", "Wisely")) %>%
select(-Wisely)
head(all_ITS)
all_ITS <- bind_rows(blast, no_blast)
all_ITS <- tidyr::gather(all_ITS, "Sample", "Reads", S008809.Wisely:S009099.Wisely) %>%
filter(Reads != 0)
all_ITS <- tidyr::separate(all_ITS, Sample, into = c("Sample", "Wisely")) %>%
select(-Wisely)
head(all_ITS)
trnL_voucher_data <- read.csv("SequencedData/Plants/trnL_voucher_data.csv")
head(trnL_voucher_data)
head(plants)
vouchers <- select(plants, vial_barcode, sci_name_profID, year) %>%
filter(year != '2017') %>%
rename(Sample = vial_barcode) %>%
select(-year)
vouchers <- select(plants, vial_barcode, year) %>%
filter(year != '2017') %>%
rename(Sample = vial_barcode) %>%
select(-year)
head(vouchers)
vouchers_its <- semi_join(all_ITS, vouchers, by = "Sample")
head(vouchers_its)
write.csv(vouchers_its, "SequencedData/Plants/ITS_voucher_data.csv", row.names = FALSE)
fecal <- anti_join(all_ITS, vouchers, by = "Sample")
head(fecal)
head(vouchers_its)
write.csv(fecal, "SequencedData/Plants/ITS_fecal_data.csv", row.names = F)
?duplicated
head(taxa_its)
library(dplyr)
blast <- read.csv("./Plants/ITS_blast.csv", header = TRUE, na.strings = "")
no_blast <- read.csv("./Plants/ITS_no_blast.csv", header = TRUE, na.strings = "")
plants <- read.csv("./CollectionData/plant_voucher_collection.csv", header = TRUE)
blast <- select(blast, -Sum)
blast <- blast[-c(463:464),]
no_blast <- select(no_blast, -Sum)
taxa_its <- select(blast, OTU.ID, ConsensusLineage)
head(taxa_its)
taxa_its[duplicated(taxa_its$ConsensusLineage)]
library(dplyr)
blast <- read.csv("./Plants/ITS_blast.csv", header = TRUE, na.strings = "")
blast <- select(blast, -Sum)
blast <- blast[-c(463:464),]
blast <- read.csv("./Plants/ITS_blast.csv", header = TRUE, na.strings = "", row.names = "OTU.ID")
blast <- read.csv("./Plants/ITS_blast.csv", header = TRUE, na.strings = "", row.names = OTU.ID)
blast <- read.csv("./Plants/ITS_blast.csv", header = TRUE, na.strings = "", row.names = TRUE)
blast <- read.csv("./Plants/ITS_blast.csv", header = TRUE, na.strings = "", row.names)
blast <- read.csv("./Plants/ITS_blast.csv", header = TRUE, na.strings = "", row.names = 1)
blast <- read.csv("./Plants/ITS_blast.csv", header = TRUE, na.strings = "")
taxa_its <- select(blast, OTU.ID, ConsensusLineage)
for(this_level in c('k','p','c','o','f','g','s')){
# separate taxa into columns
step_one=sapply(strsplit(as.character(taxa_its$ConsensusLineage), paste0(this_level,'__')), '[', 2)
step_two=sapply(strsplit(step_one, ';'), '[', 1)
taxa_its[,this_level]=step_two
}
dups <- taxa_its$ConsensusLineage
dups <- dups[duplicated(dups)]
head(dups)
dups
joined <- semi_join(dups, taxa_its)
dups <- taxa_its$ConsensusLineage
dups <- as.character(dups[duplicated(dups)])
joined <- semi_join(dups, taxa_its)
str(taxa_its)
dups <- as.character(taxa_its$ConsensusLineage)
dups <- as.character(dups[duplicated(dups)])
joined <- semi_join(dups, taxa_its)
taxa_its$ConsensusLineage <- as.character(taxa_its$ConsensusLineage)
dups <- taxa_its$ConsensusLineage
dups <- as.character(dups[duplicated(dups)])
joined <- semi_join(dups, taxa_its)
taxa_its <- select(blast, OTU.ID, ConsensusLineage)
dups <- taxa_its$ConsensusLineage
dups <- dups[duplicated(dups)]
dups <- as.data.frame(dups[duplicated(dups)])
dups <- taxa_its$ConsensusLineage
dups <- as.data.frame(dups[duplicated(dups)])
joined <- semi_join(dups, taxa_its)
head(taxa_its)
head(dups)
colnames(dups) <- "ConsensusLineage"
joined <- semi_join(dups, taxa_its)
View(joined)
joined <- right_join(dups, taxa_its)
View(joined)
distinct(joined)
joined <- left_join(dups, taxa_its)
joined <- inner_join(dups, taxa_its)
joined <- semi_join(taxa_its, dups)
View(joined)
length(unique(joined))
unique(joined)
library(dplyr)
blast <- read.csv("./Plants/ITS_blast.csv", header = TRUE, na.strings = "")
blast <- select(blast, -Sum)
blast <- blast[-c(463:464),]
taxa_its <- select(blast, OTU.ID, ConsensusLineage)
dups <- taxa_its$ConsensusLineage
dups <- as.data.frame(dups[duplicated(dups)])
colnames(dups) <- "ConsensusLineage"
joined <- semi_join(taxa_its, dups)
View(joined)
unique(joined)
count(unique(joined))
length(unique(joined$OTU.ID))
length(unique(joined$ConsensusLineage))
length(unique(dups))
count(unique(dups))
for(this_level in c('k','p','c','o','f','g','s')){
# separate taxa into columns
step_one=sapply(strsplit(as.character(taxa_its$ConsensusLineage), paste0(this_level,'__')), '[', 2)
step_two=sapply(strsplit(step_one, ';'), '[', 1)
taxa_its[,this_level]=step_two
}
for(this_level in c('k','p','c','o','f','g','s')){
# separate taxa into columns
step_one=sapply(strsplit(as.character(joined$ConsensusLineage), paste0(this_level,'__')), '[', 2)
step_two=sapply(strsplit(step_one, ';'), '[', 1)
joined[,this_level]=step_two
}
head(joined)
taxa_its <- select(blast, OTU.ID, ConsensusLineage)
?distinct
joined <- select(taxa_its, OTU.ID, k:s) %>%
distinct(OTU.ID, .keep_all = TRUE) %>%
rename(Family = f, Genus = g, SciName = s)
head(joined)
joined <- select(taxa_its, OTU.ID, k:s) %>%
distinct(OTU.ID, .keep_all = TRUE) %>%
rename(Family = f, Genus = g, SciName = s)
library(dplyr)
blast <- read.csv("./Plants/ITS_blast.csv", header = TRUE, na.strings = "")
blast <- select(blast, -Sum)
blast <- blast[-c(463:464),]
taxa_its <- select(blast, OTU.ID, ConsensusLineage)
dups <- taxa_its$ConsensusLineage
dups <- as.data.frame(dups[duplicated(dups)])
colnames(dups) <- "ConsensusLineage"
joined <- semi_join(taxa_its, dups)
for(this_level in c('k','p','c','o','f','g','s')){
# separate taxa into columns
step_one=sapply(strsplit(as.character(joined$ConsensusLineage), paste0(this_level,'__')), '[', 2)
step_two=sapply(strsplit(step_one, ';'), '[', 1)
joined[,this_level]=step_two
}
joined <- select(taxa_its, OTU.ID, k:s) %>%
distinct(OTU.ID, .keep_all = TRUE) %>%
rename(Family = f, Genus = g, SciName = s)
joined <- select(taxa_its, -ConsensusLineage) %>%
distinct(OTU.ID, .keep_all = TRUE) %>%
rename(Family = f, Genus = g, SciName = s)
names(joined)
joined <- select(taxa_its, -ConsensusLineage) %>%
rename(Family = f, Genus = g, SciName = s)
